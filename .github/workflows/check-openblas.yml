---
name: Check OpenBLAS Version
on:
    workflow_call:
        inputs:
            version:
                description: Specific OpenBLAS version to check (empty for latest)
                required: false
                type: string
                default: ''
            is-nightly:
                description: Whether this is a nightly build
                required: false
                type: boolean
                default: false
        outputs:
            openblas-version:
                description: OpenBLAS version to build
                value: ${{ jobs.check.outputs.version }}
            openblas-commit:
                description: OpenBLAS commit hash
                value: ${{ jobs.check.outputs.commit }}
            should-build:
                description: Whether build is needed
                value: ${{ jobs.check.outputs.should-build }}

jobs:
    check:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.version.outputs.version }}
            commit: ${{ steps.version.outputs.commit }}
            should-build: ${{ steps.version.outputs.should-build }}
        steps:
            - name: Get OpenBLAS version and check if build needed
              id: version
              run: |
                  if [[ -n "${{ inputs.version }}" ]]; then
                    VERSION="${{ inputs.version }}"
                    echo "Using specified version: $VERSION"
                  else
                    echo "Fetching latest OpenBLAS version..."
                    VERSION=$(gh release list --repo OpenMathLib/OpenBLAS --limit 1 --exclude-pre-releases --json tagName --jq '.[0].tagName')

                    if [[ -z "$VERSION" ]]; then
                      echo "Error: Could not fetch latest OpenBLAS version"
                      exit 1
                    fi
                    echo "Latest version found: $VERSION"
                  fi

                  COMMIT=$(git ls-remote https://github.com/OpenMathLib/OpenBLAS.git "refs/tags/$VERSION" | cut -f1)
                  echo "Commit for $VERSION: $COMMIT"

                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "commit=$COMMIT" >> $GITHUB_OUTPUT

                  SHOULD_BUILD="true"
                  if [[ "${{ inputs.is-nightly }}" == "true" ]]; then
                    echo "Checking if version $VERSION (commit $COMMIT) was already built..."
                    if gh release view "nightly" --json body,tagName 2>/dev/null | \
                       jq -r '.body' | grep -q "Commit: $COMMIT"; then
                      echo "Version $VERSION with commit $COMMIT already built in nightly release"
                      SHOULD_BUILD="false"
                    else
                      echo "Version $VERSION with commit $COMMIT not yet built"
                      SHOULD_BUILD="true"
                    fi
                  fi

                  echo "should-build=$SHOULD_BUILD" >> $GITHUB_OUTPUT
                  echo "Build needed: $SHOULD_BUILD"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
